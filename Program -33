#include <stdio.h>

#include <unistd.h>

#include <sys/wait.h>

void generateFibonacci(int n)

{

    int a = 0, b = 1, c, i;

    printf("Fibonacci Series: ");

    for (i = 1; i <= n; i++)

    {

        printf("%d ", a);

        c = a + b;

        a = b;

        b = c;

    }

    printf("\n");

}

int isPrime(int n)

{

    int i;

    for (i = 2; i <= n / 2; i++)

    {

        if (n % i == 0)

            return 0;

    }

    return 1;

}

void printPrimes(int n)

{

    int i;

    printf("Prime Numbers: ");

    for (i = 2; i <= n; i++)

    {

        if (isPrime(i))

            printf("%d ", i);

    }

    printf("\n");

}

int main()

{

    int n;

    pid_t pid;

    printf("Enter the value of n: ");

    scanf("%d", &n);

    pid = fork();

    if (pid == 0) // Child Process

    {

        generateFibonacci(n);

    }

    else if (pid > 0) // Parent Process

    {

        wait(NULL); // Wait for child process to complete

        printPrimes(n);

    }

    else // Fork Failed

    {

        printf("Fork Failed\n");

        return 1;

    }

    return 0;

}
